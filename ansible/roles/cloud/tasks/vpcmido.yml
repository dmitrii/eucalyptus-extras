---
- name: install midonet and dependency packages
  yum:
    name:
      - dsc22
      - java-1.8.0-openjdk-headless
      - midolman
      - midonet-cluster
      - midonet-tools
      - python-midonetclient
      - zkdump
      - zookeeper
    state: present
  tags:
    - image
    - packages

- name: midonet configuration
  template:
    src: midonet.conf.j2
    dest: /etc/midonet/midonet.conf
    owner: root
    group: root
    mode: 0644

- name: midolman configuration
  template:
    src: midolman.conf.j2
    dest: /etc/midolman/midolman.conf
    owner: root
    group: root
    mode: 0644

- name: create cassandra tmpfiles configuration
  copy:
    content: |
      # path                       mode uid       gid       age
      d /run/cassandra             0755 cassandra cassandra -
    dest: /etc/tmpfiles.d/cassandra.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - image

- name: cassandra systemd drop-in directory
  file:
    path: /etc/systemd/system/cassandra.service.d
    state: directory
    mode: 0755

- name: cassandra systemd drop-in for heap configuration
  copy:
    dest: /etc/systemd/system/cassandra.service.d/jvmheap.conf
    mode: 0644
    content: |
      [Service]
      Environment="MAX_HEAP_SIZE={{ midonet_cassandra_heap | default(midonet_cassandra_heapnew) }}" "HEAP_NEWSIZE={{ midonet_cassandra_heapnew | default(midonet_cassandra_heap) }}"
  when: midonet_cassandra_heap is not none or midonet_cassandra_heapnew is not none

- name: cassandra configure cluster name
  replace:
    path: /etc/cassandra/conf/cassandra.yaml
    regexp: '^cluster_name: .+$'
    replace: "cluster_name: {{ midonet_cassandra_name }}"

- name: cassandra configure listen address
  replace:
    path: /etc/cassandra/conf/cassandra.yaml
    regexp: '^listen_address: .+$'
    replace: "listen_address: {{ eucalyptus_host_cluster_ipv4 }}"

- name: cassandra configure rpc listen address
  replace:
    path: /etc/cassandra/conf/cassandra.yaml
    regexp: '^rpc_address: .+$'
    replace: "rpc_address: {{ eucalyptus_host_cluster_ipv4 }}"

- name: cassandra configure seeds
  replace:
    path: /etc/cassandra/conf/cassandra.yaml
    regexp: '^(\s+)-\s+seeds:\s+.+$'
    replace: '\1- seeds: "{{ eucalyptus_host_cluster_ipv4 }}"'

- name: start cassandra service
  systemd:
    daemon_reload: true
    enabled: true
    state: started
    name: cassandra

- name: zookeeper configure autopurge snap count
  replace:
    path: /etc/zookeeper/zoo.cfg
    regexp: '^#?autopurge.snapRetainCount=.+$'
    replace: 'autopurge.snapRetainCount=3'

- name: zookeeper configure autopurge interval
  replace:
    path: /etc/zookeeper/zoo.cfg
    regexp: '^#?autopurge.purgeInterval=.+$'
    replace: 'autopurge.purgeInterval=1'

- name: zookeeper configure listen address
  lineinfile:
    dest: /etc/zookeeper/zoo.cfg
    state: present
    regexp: '^clientPortAddress=.+$'
    line: "clientPortAddress={{ eucalyptus_host_cluster_ipv4 }}"
    insertafter: '^clientPort=.+$'

- name: zookeeper systemd drop-in directory
  file:
    path: /etc/systemd/system/zookeeper.service.d
    state: directory
    mode: 0755
  tags:
    - image

- name: zookeeper systemd drop-in for disabling jmx listener
  copy:
    dest: /etc/systemd/system/zookeeper.service.d/jmxdisable.conf
    mode: 0644
    content: |
      [Service]
      Environment=JMXDISABLE=true
  tags:
    - image

- name: zookeeper systemd drop-in for heap configuration
  copy:
    dest: /etc/systemd/system/zookeeper.service.d/jvmheap.conf
    mode: 0644
    content: |
      [Service]
      Environment="JVMFLAGS=-Xmx{{ midonet_zookeeper_heap }} -Xms{{ midonet_zookeeper_heap }}"
  when: midonet_zookeeper_heap is not none

- name: start zookeeper service
  systemd:
    daemon_reload: true
    enabled: true
    state: started
    name: zookeeper

- name: wait for zookeeper service
  wait_for:
    sleep: 10
    host: "{{ eucalyptus_host_cluster_ipv4 }}"
    port: 2181
    timeout: 120

- name: eucalyptus midonet gateway veth unit
  template:
    src: eucalyptus-vpcmido-gwnet.service.j2
    dest: /etc/systemd/system/eucalyptus-vpcmido-gwnet.service
    owner: root
    group: root
    mode: 0644
  when: vpcmido_gw_srv_veth_create

- name: start eucalyptus midonet gateway veth service
  systemd:
    enabled: true
    state: started
    name: eucalyptus-vpcmido-gwnet
  when: vpcmido_gw_srv_veth_create

- name: eucalyptus midonet gateway proxy arp runtime
  command:
    cmd: sysctl -w net.ipv4.conf.{{ cloud_firewalld_public_interface }}.proxy_arp=1
  when: vpcmido_gw_srv_veth_create

- name: eucalyptus midonet gateway forwarding / proxy arp persistent
  copy:
    dest: /etc/sysctl.d/80-net-{{ cloud_firewalld_public_interface }}.conf
    mode: 0644
    content: |
      # Enable forwarding and proxy arp for eucalyptus midonet gateway
      net.ipv4.conf.{{ cloud_firewalld_public_interface }}.forwarding=1
      net.ipv4.conf.{{ cloud_firewalld_public_interface }}.proxy_arp=1
  when: vpcmido_gw_srv_veth_create

- name: midonet defaults configuration
  template:
    src: midonet-default.conf.j2
    dest: /etc/midonet/midonet-default.conf
    owner: root
    group: root
    mode: 0644

- name: midonet apply defaults configuration
  shell:
    cmd: mn-conf set -t default < /etc/midonet/midonet-default.conf

- name: midonet cluster heap memory
  replace:
    path: /etc/midonet-cluster/midonet-cluster-env.sh
    regexp: '^HEAP_NEWSIZE=".+"$'
    replace: 'HEAP_NEWSIZE="{{ midonet_cluster_heap }}"'
  when: midonet_cluster_heap is not none

- name: midonet cluster heap new memory
  replace:
    path: /etc/midonet-cluster/midonet-cluster-env.sh
    regexp: '^MAX_HEAP_SIZE=".+"$'
    replace: 'MAX_HEAP_SIZE="{{ midonet_cluster_heap }}"'
  when: midonet_cluster_heap is not none

- name: midonet cluster systemd drop-in directory
  file:
    path: /etc/systemd/system/midonet-cluster.service.d
    state: directory
    mode: 0755
  tags:
    - image

- name: midonet cluster systemd drop-in for disabling jmx listener
  copy:
    dest: /etc/systemd/system/midonet-cluster.service.d/jmxdisable.conf
    mode: 0644
    content: |
      [Service]
      Environment=JMXDISABLE=true
  tags:
    - image

- name: midolman memory
  replace:
    path: /etc/midolman/midolman-env.sh
    regexp: '^MAX_HEAP_SIZE=".+"$'
    replace: 'MAX_HEAP_SIZE="{{ midonet_midolman_heap }}"'
  when: midonet_midolman_heap is not none

- name: midolman systemd drop-in directory
  file:
    path: /etc/systemd/system/midolman.service.d
    state: directory
    mode: 0755
  tags:
    - image

- name: midolman systemd drop-in for disabling jmx listener
  copy:
    dest: /etc/systemd/system/midolman.service.d/jmxdisable.conf
    mode: 0644
    content: |
      [Service]
      Environment=JMXDISABLE=true
  tags:
    - image

- name: systemd daemon reload
  systemd:
    daemon_reload: true

- name: eucalyptus firewalld midonet gateway service
  template:
    src: firewalld-service-euca-vpcmidogw.xml.j2
    dest: /etc/firewalld/services/euca-vpcmidogw.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - firewalld

- name: eucalyptus firewalld midonet gateway zone
  template:
    src: firewalld-zone-euca-vpcmidogw.xml.j2
    dest: /etc/firewalld/zones/euca-vpcmidogw.xml
    owner: root
    group: root
    mode: 0644
  tags:
    - firewalld

- name: eucalyptus firewalld midonet gateway zone load
  command:
    cmd: firewall-cmd --permanent --new-zone euca-vpcmidogw
  tags:
    - firewalld
  register: firewalld_result
  failed_when: "firewalld_result is failed and 'NAME_CONFLICT' not in firewalld_result.stderr"
  changed_when: '"NAME_CONFLICT" not in firewalld_result.stderr'
  when: cloud_firewalld_configure

- name: firewalld reload
  systemd:
    name: firewalld
    state: reloaded
  tags:
    - firewalld
  when: cloud_firewalld_configure and firewalld_result.changed

- name: eucalyptus firewalld midonet gateway service for zone
  firewalld:
    zone: "{{ cloud_firewalld_vpcmidogw_zone }}"
    service: euca-vpcmidogw
    state: enabled
    permanent: yes
    immediate: "{{ cloud_firewalld_start }}"
  tags:
    - firewalld
  when: cloud_firewalld_configure and cloud_firewalld_vpcmidogw_zone is not none

- name: eucalyptus firewalld midonet gateway dedicated interface zone
  firewalld:
    zone: euca-vpcmidogw
    interface: "{{ cloud_firewalld_vpcmidogw_interface }}"
    state: enabled
    permanent: yes
    immediate: "{{ cloud_firewalld_start }}"
  tags:
    - firewalld
  when: cloud_firewalld_configure and cloud_firewalld_vpcmidogw_interface is not none

- name: eucalyptus tunnel zone midonet configuration
  template:
    src: eucalyptus-vpcmidotz-up.sh.j2
    dest: /usr/local/bin/eucalyptus-vpcmidotz-up.sh
    owner: root
    group: root
    mode: 0755

- name: eucanetd service.d directory
  file:
    path: /etc/systemd/system/eucanetd.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: eucanetd tunnel zone configuration drop-in
  copy:
    src: eucanetd-vpcmidotz.conf
    dest: /etc/systemd/system/eucanetd.service.d/eucanetd-vpcmidotz.conf
    owner: root
    group: root
    mode: 0644

- name: start midonet-cluster service
  systemd:
    enabled: true
    state: started
    name: midonet-cluster

- name: start midolman service
  systemd:
    enabled: true
    state: started
    name: midolman

